#Deduce Compiler
	SET(PGT_COMP_MSVC 0 )
	SET(PGT_COMP_MINGW 0 )
	SET(PGT_COMP_GNUCPP 0 )
	SET(PGT_COMP_CLANG 0 )
	SET(PGT_COMP_INTEL 0 )
	IF(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
		SET(PGT_COMP_MSVC 1 )
		SET(PGT_LIB_EXT ".lib" )
	ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		IF(WIN32 AND NOT CMAKE_HOST_WIN32 )
			SET(PGT_COMP_MINGW 1 )
		ENDIF(WIN32 AND NOT CMAKE_HOST_WIN32)
		SET(PGT_COMP_GNUCPP 1 )
		SET(PGT_LIB_EXT ".a" )
	ELSE(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
		MESSAGE(FATAL ERROR "Your ${CMAKE_CXX_COMPILER_ID} Compiler is not specifically handled. Using Fallback.")
	ENDIF(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")

#Give Build Options
option(PGT_STATIC OFF)
option(PGT_WIN64 OFF)

#set output path
	set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR} )
	set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
	set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR} )
	set (ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
	set (LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
	set (RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
	SET(PGT_BUILD_DIR "${CMAKE_BINARY_DIR}/$<CONFIG>")

#Set Compiler and Linker Flags	
IF(${PGT_COMP_MSVC})
		FOREACH(pgt_flagvar CMAKE_CXX_FLAGS_RELEASE CMAKE_C_FLAGS_RELEASE CMAKE_CXX_FLAGS_DEBUG CMAKE_C_FLAGS_DEBUG)
			STRING(APPEND ${pgt_flagvar} " /MP")
			IF(${PGT_STATIC}) 
				STRING(REPLACE "/MD" "/MT" ${pgt_flagvar} ${${pgt_flagvar}})
			ENDIF()
		ENDFOREACH()	
ENDIF()
   
